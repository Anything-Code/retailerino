### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  city: String!
  country: String!
  id: Int!
  orders: [Order!]!
  street: String!
  user: User!
  userUId: String!
  zip: BigInt!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type CartItem {
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
  user: User!
  userUId: String!
}

type Category {
  id: Int!
  inventoryGroupCategories: [InventoryGroupCategory!]!
  name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

type DeliveryServiceProvider {
  id: Int!
  name: String!
  orders: [Order!]!
  pickupTime: DateTime!
}

type Image {
  id: Int!
  inventoryGroups: [InventoryGroupImage!]!
  url: String!
}

type InventoryGroup {
  amount: Int!
  cartItems: [CartItem!]!
  displayAmount: Int!
  id: Int!
  images: [InventoryGroupImage!]!
  inventoryGroupCategories: [InventoryGroupCategory!]!
  inventoryGroupFroms: [InventoryGroupRelationship!]!
  inventoryGroupTos: [InventoryGroupRelationship!]!
  inventoryItems: [InventoryItem!]!
  itemName: String!
  orderItems: [OrderItem!]!
  price: Float!
  reviews: [Review!]!
  updatedAt: DateTime!
}

type InventoryGroupCategory {
  category: Category!
  categoryId: Int!
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
}

type InventoryGroupImage {
  image: Image!
  imageId: Int!
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
}

type InventoryGroupRelationship {
  from: InventoryGroup!
  inventoryGroupId: Int!
  to: InventoryGroup!
}

type InventoryItem {
  arrivedAt: DateTime!
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
  note: String!
  shippedAt: DateTime!
  soldAt: DateTime!
  uBarcode: Int!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  """Logs a user in"""
  login(email: String!, password: String!): User
  logout: Boolean
}

type Order {
  address: Address!
  addressId: Int!
  cofirmed: Boolean!
  createdAt: DateTime!
  deliveryServiceProvicer: DeliveryServiceProvider!
  deliveryServiceProvicerId: Int!
  id: Int!
  orderItems: [OrderItem!]!
  user: User!
  userUId: String!
}

type OrderItem {
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
  order: Order!
  orderId: Int!
}

type Query {
  ok: Boolean!
}

type Review {
  description: String!
  id: Int!
  inventoryGroup: InventoryGroup!
  inventoryGroupId: Int!
  rating: Int!
  user: User!
  userUId: String!
}

type Role {
  id: Int!
  name: String!
  users: [User!]!
}

"""A user"""
type User {
  addresses: [Address!]!
  cartItems: [CartItem!]!
  createdAt: DateTime!
  cuid: ID!
  email: String!
  firstname: String!
  lastLogin: DateTime!
  lastUserAgent: String!
  lastname: String!
  orders: [Order!]!
  phoneNumber: String!
  reviews: [Review!]!
  role: Role!
  roleId: Int!
  updatedAt: DateTime!
  verifiedAt: DateTime
}
